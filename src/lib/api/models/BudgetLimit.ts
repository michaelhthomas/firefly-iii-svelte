/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v2.0.10
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-10-15T12:13:25+00:00  Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: 2.0.10
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BudgetLimit
 */
export interface BudgetLimit {
    /**
     * 
     * @type {Date}
     * @memberof BudgetLimit
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BudgetLimit
     */
    readonly updatedAt?: Date;
    /**
     * Start date of the budget limit.
     * @type {Date}
     * @memberof BudgetLimit
     */
    start: Date;
    /**
     * End date of the budget limit.
     * @type {Date}
     * @memberof BudgetLimit
     */
    end: Date;
    /**
     * Use either currency_id or currency_code. Defaults to the user's default currency.
     * @type {string}
     * @memberof BudgetLimit
     */
    currencyId?: string;
    /**
     * Use either currency_id or currency_code. Defaults to the user's default currency.
     * @type {string}
     * @memberof BudgetLimit
     */
    currencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof BudgetLimit
     */
    readonly currencyName?: string;
    /**
     * 
     * @type {string}
     * @memberof BudgetLimit
     */
    readonly currencySymbol?: string;
    /**
     * 
     * @type {number}
     * @memberof BudgetLimit
     */
    readonly currencyDecimalPlaces?: number;
    /**
     * The budget ID of the associated budget.
     * @type {string}
     * @memberof BudgetLimit
     */
    readonly budgetId: string;
    /**
     * Period of the budget limit. Only used when auto-generated by auto-budget.
     * @type {string}
     * @memberof BudgetLimit
     */
    readonly period?: string | null;
    /**
     * 
     * @type {string}
     * @memberof BudgetLimit
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof BudgetLimit
     */
    readonly spent?: string | null;
}

/**
 * Check if a given object implements the BudgetLimit interface.
 */
export function instanceOfBudgetLimit(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "start" in value;
    isInstance = isInstance && "end" in value;
    isInstance = isInstance && "budgetId" in value;
    isInstance = isInstance && "amount" in value;

    return isInstance;
}

export function BudgetLimitFromJSON(json: any): BudgetLimit {
    return BudgetLimitFromJSONTyped(json, false);
}

export function BudgetLimitFromJSONTyped(json: any, ignoreDiscriminator: boolean): BudgetLimit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'start': (new Date(json['start'])),
        'end': (new Date(json['end'])),
        'currencyId': !exists(json, 'currency_id') ? undefined : json['currency_id'],
        'currencyCode': !exists(json, 'currency_code') ? undefined : json['currency_code'],
        'currencyName': !exists(json, 'currency_name') ? undefined : json['currency_name'],
        'currencySymbol': !exists(json, 'currency_symbol') ? undefined : json['currency_symbol'],
        'currencyDecimalPlaces': !exists(json, 'currency_decimal_places') ? undefined : json['currency_decimal_places'],
        'budgetId': json['budget_id'],
        'period': !exists(json, 'period') ? undefined : json['period'],
        'amount': json['amount'],
        'spent': !exists(json, 'spent') ? undefined : json['spent'],
    };
}

export function BudgetLimitToJSON(value?: BudgetLimit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start': (value.start.toISOString()),
        'end': (value.end.toISOString()),
        'currency_id': value.currencyId,
        'currency_code': value.currencyCode,
        'amount': value.amount,
    };
}

