/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v2.0.10
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-10-15T12:13:25+00:00  Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: 2.0.10
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserBlockedCodeProperty } from './UserBlockedCodeProperty';
import {
    UserBlockedCodePropertyFromJSON,
    UserBlockedCodePropertyFromJSONTyped,
    UserBlockedCodePropertyToJSON,
} from './UserBlockedCodeProperty';
import type { UserRoleProperty } from './UserRoleProperty';
import {
    UserRolePropertyFromJSON,
    UserRolePropertyFromJSONTyped,
    UserRolePropertyToJSON,
} from './UserRoleProperty';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly updatedAt?: Date;
    /**
     * The new users email address.
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * Boolean to indicate if the user is blocked.
     * @type {boolean}
     * @memberof User
     */
    blocked?: boolean;
    /**
     * 
     * @type {UserBlockedCodeProperty}
     * @memberof User
     */
    blockedCode?: UserBlockedCodeProperty | null;
    /**
     * 
     * @type {UserRoleProperty}
     * @memberof User
     */
    role?: UserRoleProperty | null;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'email': json['email'],
        'blocked': !exists(json, 'blocked') ? undefined : json['blocked'],
        'blockedCode': !exists(json, 'blocked_code') ? undefined : UserBlockedCodePropertyFromJSON(json['blocked_code']),
        'role': !exists(json, 'role') ? undefined : UserRolePropertyFromJSON(json['role']),
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'blocked': value.blocked,
        'blocked_code': UserBlockedCodePropertyToJSON(value.blockedCode),
        'role': UserRolePropertyToJSON(value.role),
    };
}

