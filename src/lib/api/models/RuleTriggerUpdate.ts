/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v2.0.10
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-12-21T01:54:06+00:00  Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: 2.0.10
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RuleTriggerKeyword } from './RuleTriggerKeyword';
import {
    RuleTriggerKeywordFromJSON,
    RuleTriggerKeywordFromJSONTyped,
    RuleTriggerKeywordToJSON,
} from './RuleTriggerKeyword';

/**
 * 
 * @export
 * @interface RuleTriggerUpdate
 */
export interface RuleTriggerUpdate {
    /**
     * 
     * @type {RuleTriggerKeyword}
     * @memberof RuleTriggerUpdate
     */
    type?: RuleTriggerKeyword;
    /**
     * The accompanying value the trigger responds to. This value is often mandatory, but this depends on the trigger.
     * @type {string}
     * @memberof RuleTriggerUpdate
     */
    value?: string;
    /**
     * Order of the trigger
     * @type {number}
     * @memberof RuleTriggerUpdate
     */
    order?: number;
    /**
     * If the trigger is active.
     * @type {boolean}
     * @memberof RuleTriggerUpdate
     */
    active?: boolean;
    /**
     * When true, other triggers will not be checked if this trigger was triggered.
     * @type {boolean}
     * @memberof RuleTriggerUpdate
     */
    stopProcessing?: boolean;
}

/**
 * Check if a given object implements the RuleTriggerUpdate interface.
 */
export function instanceOfRuleTriggerUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RuleTriggerUpdateFromJSON(json: any): RuleTriggerUpdate {
    return RuleTriggerUpdateFromJSONTyped(json, false);
}

export function RuleTriggerUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuleTriggerUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : RuleTriggerKeywordFromJSON(json['type']),
        'value': !exists(json, 'value') ? undefined : json['value'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'stopProcessing': !exists(json, 'stop_processing') ? undefined : json['stop_processing'],
    };
}

export function RuleTriggerUpdateToJSON(value?: RuleTriggerUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': RuleTriggerKeywordToJSON(value.type),
        'value': value.value,
        'order': value.order,
        'active': value.active,
        'stop_processing': value.stopProcessing,
    };
}

