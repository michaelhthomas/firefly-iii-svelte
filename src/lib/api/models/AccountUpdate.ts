/* tslint:disable */
/* eslint-disable */
/**
 * Firefly III API v2.0.10
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2023-10-15T12:13:25+00:00  Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 
 *
 * The version of the OpenAPI document: 2.0.10
 * Contact: james@firefly-iii.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountRoleProperty } from './AccountRoleProperty';
import {
    AccountRolePropertyFromJSON,
    AccountRolePropertyFromJSONTyped,
    AccountRolePropertyToJSON,
} from './AccountRoleProperty';
import type { CreditCardType } from './CreditCardType';
import {
    CreditCardTypeFromJSON,
    CreditCardTypeFromJSONTyped,
    CreditCardTypeToJSON,
} from './CreditCardType';
import type { InterestPeriod } from './InterestPeriod';
import {
    InterestPeriodFromJSON,
    InterestPeriodFromJSONTyped,
    InterestPeriodToJSON,
} from './InterestPeriod';
import type { LiabilityType } from './LiabilityType';
import {
    LiabilityTypeFromJSON,
    LiabilityTypeFromJSONTyped,
    LiabilityTypeToJSON,
} from './LiabilityType';

/**
 * 
 * @export
 * @interface AccountUpdate
 */
export interface AccountUpdate {
    /**
     * 
     * @type {string}
     * @memberof AccountUpdate
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdate
     */
    iban?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdate
     */
    bic?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdate
     */
    accountNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdate
     */
    openingBalance?: string;
    /**
     * 
     * @type {Date}
     * @memberof AccountUpdate
     */
    openingBalanceDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdate
     */
    virtualBalance?: string;
    /**
     * Use either currency_id or currency_code. Defaults to the user's default currency.
     * @type {string}
     * @memberof AccountUpdate
     */
    currencyId?: string;
    /**
     * Use either currency_id or currency_code. Defaults to the user's default currency.
     * @type {string}
     * @memberof AccountUpdate
     */
    currencyCode?: string;
    /**
     * If omitted, defaults to true.
     * @type {boolean}
     * @memberof AccountUpdate
     */
    active?: boolean;
    /**
     * Order of the account
     * @type {number}
     * @memberof AccountUpdate
     */
    order?: number;
    /**
     * If omitted, defaults to true.
     * @type {boolean}
     * @memberof AccountUpdate
     */
    includeNetWorth?: boolean;
    /**
     * 
     * @type {AccountRoleProperty}
     * @memberof AccountUpdate
     */
    accountRole?: AccountRoleProperty | null;
    /**
     * 
     * @type {CreditCardType}
     * @memberof AccountUpdate
     */
    creditCardType?: CreditCardType | null;
    /**
     * Mandatory when the account_role is ccAsset. Moment at which CC payment installments are asked for by the bank.
     * @type {Date}
     * @memberof AccountUpdate
     */
    monthlyPaymentDate?: Date | null;
    /**
     * 
     * @type {LiabilityType}
     * @memberof AccountUpdate
     */
    liabilityType?: LiabilityType | null;
    /**
     * Mandatory when type is liability. Interest percentage.
     * @type {string}
     * @memberof AccountUpdate
     */
    interest?: string | null;
    /**
     * 
     * @type {InterestPeriod}
     * @memberof AccountUpdate
     */
    interestPeriod?: InterestPeriod | null;
    /**
     * 
     * @type {string}
     * @memberof AccountUpdate
     */
    notes?: string | null;
    /**
     * Latitude of the account's location, if applicable. Can be used to draw a map. If omitted, the existing location will be kept. If submitted as NULL, the current location will be removed.
     * @type {number}
     * @memberof AccountUpdate
     */
    latitude?: number | null;
    /**
     * Latitude of the account's location, if applicable. Can be used to draw a map. If omitted, the existing location will be kept. If submitted as NULL, the current location will be removed.
     * @type {number}
     * @memberof AccountUpdate
     */
    longitude?: number | null;
    /**
     * Zoom level for the map, if drawn. This to set the box right. Unfortunately this is a proprietary value because each map provider has different zoom levels. If omitted, the existing location will be kept. If submitted as NULL, the current location will be removed.
     * @type {number}
     * @memberof AccountUpdate
     */
    zoomLevel?: number | null;
}

/**
 * Check if a given object implements the AccountUpdate interface.
 */
export function instanceOfAccountUpdate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function AccountUpdateFromJSON(json: any): AccountUpdate {
    return AccountUpdateFromJSONTyped(json, false);
}

export function AccountUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'iban': !exists(json, 'iban') ? undefined : json['iban'],
        'bic': !exists(json, 'bic') ? undefined : json['bic'],
        'accountNumber': !exists(json, 'account_number') ? undefined : json['account_number'],
        'openingBalance': !exists(json, 'opening_balance') ? undefined : json['opening_balance'],
        'openingBalanceDate': !exists(json, 'opening_balance_date') ? undefined : (json['opening_balance_date'] === null ? null : new Date(json['opening_balance_date'])),
        'virtualBalance': !exists(json, 'virtual_balance') ? undefined : json['virtual_balance'],
        'currencyId': !exists(json, 'currency_id') ? undefined : json['currency_id'],
        'currencyCode': !exists(json, 'currency_code') ? undefined : json['currency_code'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'includeNetWorth': !exists(json, 'include_net_worth') ? undefined : json['include_net_worth'],
        'accountRole': !exists(json, 'account_role') ? undefined : AccountRolePropertyFromJSON(json['account_role']),
        'creditCardType': !exists(json, 'credit_card_type') ? undefined : CreditCardTypeFromJSON(json['credit_card_type']),
        'monthlyPaymentDate': !exists(json, 'monthly_payment_date') ? undefined : (json['monthly_payment_date'] === null ? null : new Date(json['monthly_payment_date'])),
        'liabilityType': !exists(json, 'liability_type') ? undefined : LiabilityTypeFromJSON(json['liability_type']),
        'interest': !exists(json, 'interest') ? undefined : json['interest'],
        'interestPeriod': !exists(json, 'interest_period') ? undefined : InterestPeriodFromJSON(json['interest_period']),
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'zoomLevel': !exists(json, 'zoom_level') ? undefined : json['zoom_level'],
    };
}

export function AccountUpdateToJSON(value?: AccountUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'iban': value.iban,
        'bic': value.bic,
        'account_number': value.accountNumber,
        'opening_balance': value.openingBalance,
        'opening_balance_date': value.openingBalanceDate === undefined ? undefined : (value.openingBalanceDate === null ? null : value.openingBalanceDate.toISOString()),
        'virtual_balance': value.virtualBalance,
        'currency_id': value.currencyId,
        'currency_code': value.currencyCode,
        'active': value.active,
        'order': value.order,
        'include_net_worth': value.includeNetWorth,
        'account_role': AccountRolePropertyToJSON(value.accountRole),
        'credit_card_type': CreditCardTypeToJSON(value.creditCardType),
        'monthly_payment_date': value.monthlyPaymentDate === undefined ? undefined : (value.monthlyPaymentDate === null ? null : value.monthlyPaymentDate.toISOString()),
        'liability_type': LiabilityTypeToJSON(value.liabilityType),
        'interest': value.interest,
        'interest_period': InterestPeriodToJSON(value.interestPeriod),
        'notes': value.notes,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'zoom_level': value.zoomLevel,
    };
}

